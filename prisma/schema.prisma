generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Guild {
  id                String      @id @default(uuid())
  name              String      @unique
  createdAt         DateTime  @default(now()) @map(name: "created_at")
  updatedAt         DateTime  @updatedAt @map(name: "updated_at")
  officierEmails    String[]
  mythicDescription String?
  mythicTarget      Int?
  presentation      Presentation[]
  Search            Search[]
  Contact           Contact[]
  members           Member[]
}

model Presentation {
  id            String      @id @default(uuid())
  name          String
  order         Int
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  guild         Guild     @relation(fields: [guildId], references: [id])
  guildId       String
}

model Search {
  id            String      @id @default(uuid())
  image         String
  name          String
  classes       String[]
  order         Int
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  guild         Guild     @relation(fields: [guildId], references: [id])
  guildId       String
}

model Contact {
  id            String      @id @default(uuid())
  name          String
  bnet          String
  order         Int
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  guild         Guild     @relation(fields: [guildId], references: [id])
  guildId       String
}

model Member {
  id                  String  @id @default(uuid())
  characterId         Int     @unique
  avatar              String?
  name                String
  class               String?
  role                Role @default(CASU)
  realm               String
  ilvl                Int?
  rank                Int?
  periodIdMythic      Int?
  mythicRating        Int?
  colorRating         Json?
  achievements        Int?
  mythics             Mythic[]
  createdAt           DateTime  @default(now()) @map(name: "created_at")
  updatedAt           DateTime  @updatedAt @map(name: "updated_at")
  guild               Guild     @relation(fields: [guildId], references: [id])
  guildId             String
}

model Mythic {
  id              String    @id @default(uuid())
  name            String
  date            DateTime
  key             Int
  period          Int
  createdAt       DateTime  @default(now()) @map(name: "created_at")
  updatedAt       DateTime  @updatedAt @map(name: "updated_at")
  member          Member    @relation(fields: [memberId], references: [id])
  memberId        String
}

enum Role {
  TANK
  HEAL
  DISTANCE
  CAC
  CASU
  PU
}
